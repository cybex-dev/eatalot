# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET         /                                       controllers.Application.HomeController.index()


##disable this an you will recieve customerHome 403 forbidden error, the CRSF filter is used for cross site scripting prevention, use for authentication - used in POST requests
#+ nocsrf

##############################################################################

# User Controller
GET         /User/Login                             controllers.User.UserController.login()
GET         /User/Logout                            controllers.User.UserController.logout()

POST        /User/Login                             controllers.User.UserController.doLogin()

##############################################################################

##############################################################################

#Staff Controller
GET         /Staff                                  controllers.User.StaffController.index()
GET         /Staff/Login                            controllers.User.StaffController.login()
GET         /Staff/Logout                           controllers.User.StaffController.logout()

POST        /Staff/Login                            controllers.User.StaffController.doLogin()

##############################################################################

##############################################################################

# Customer Controller
GET         /User                                   controllers.User.CustomerController.index()
GET         /User/Register                          controllers.User.CustomerController.register()
GET         /User/Verify/:token                     controllers.User.CustomerController.verifyCustomer(token: String)
GET         /User/Profile                           controllers.User.CustomerController.edit()
GET         /User/History/Orders                    controllers.User.CustomerController.orderHistory()
GET         /User/History/Purchases                 controllers.User.CustomerController.paymentHistory()
GET         /User/History/Order/:orderId            controllers.User.CustomerController.viewOrder(orderId: String)
GET         /User/History/Payment/:paymentId        controllers.User.CustomerController.viewPayment(paymentId: String)

PUT         /User/Register                          controllers.User.CustomerController.create()
POST        /User/Register/Reverify                 controllers.User.CustomerController.reverify()
POST        /User/Register/Completing               controllers.User.CustomerController.completeRegistration()
PUT         /User/Profile                           controllers.User.CustomerController.update()
#GET        /User                 controllers.User.CustomerController.remove()

# Customer Schedule
GET         /User/Schedule                          controllers.Order.ScheduleController.index()
GET         /User/Schedule/New                      controllers.Order.ScheduleController.createSchedule()
GET         /User/Schedule/AddOrder                 controllers.Order.ScheduleController.addOrder()
GET         /User/Schedule/Edit                     controllers.Order.ScheduleController.editScheduleName()

DELETE      /User/Schedule/Delete/:orderId          controllers.Order.ScheduleController.removeOrder(orderId: String)
PUT         /User/Schedule/Edit                     controllers.Order.ScheduleController.updateScheduleName()
POST        /User/Schedule/New                      controllers.Order.ScheduleController.doCreateSchedule()
PUT         /User/Schedule/AddOrder                 controllers.Order.ScheduleController.doAddOrder()
DELETE      /User/Schedule/Clear                    controllers.Order.ScheduleController.clearSchedule()


##############################################################################

# Menu Controller

GET         /Menu                                   controllers.Order.MenuController.index()

##############################################################################

##############################################################################

# Kitchen Controller

GET         /Kitchen/User                           controllers.Order.KitchenController.index()

##############################################################################

##############################################################################

# Delivery Controller

GET         /Delivery/User                          controllers.Delivery.DeliveryController.index()

##############################################################################

##############################################################################

# Finance Controller

GET         /User/AddFunds                          controllers.Finance.UserFinance.addFunds()

POST        /User/AddFunds                          controllers.Finance.UserFinance.doAddFunds()

##############################################################################

##############################################################################

# Order - Management Package

GET         /menu                                   controllers.OrderController.getMenu()

GET         /menu/:menutype                         controllers.OrderController.switchMenu(menutype: Integer)

GET         /signup                                 controllers.AccountController.getSignUp

POST        /addmealtoorder                         controllers.OrderController.addMealToOrder(mealId: String)

GET         /addmeal                                controllers.OrderController.getAddMealToMenu

POST        /postmeal                               controllers.OrderController.addMeal

GET         /dologin                                controllers.AccountController.doLogin()

GET         /dosignout                              controllers.AccountController.doSignOut()

GET         /cart                                   controllers.OrderController.getCart()

POST        /cart/removemeal                        controllers.OrderController.removeMealFromOrder(mealId: String)

POST        /submit                                 controllers.OrderController.submitCart()

##############################################################################

# An example controller showing how to use dependency injection
GET         /count                                  controllers.CountController.count

# An example controller showing how to write asynchronous code
GET         /message                                controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                           controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/User/*file                      controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/User/Registration/*file         controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/Delivery/*file                  controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/Kitchen/*file                   controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/Staff/*file                     controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/History/*file                   controllers.Assets.versioned(path="/public", file: Asset)

# Javascript Routing
#GET        /assets/javascripts/routes               controllers.Order.ScheduleController.javascriptRoutes()



# Default path if not found
GET         /*path                                  controllers.Application.HomeController.invalidRoute(path: String)

