2017-10-12 08:16:53,918 [INFO] from application in scala-execution-context-global-58 - Creating Pool for datasource 'default'
2017-10-12 08:16:55,756 [INFO] from play.api.db.DefaultDBApi in scala-execution-context-global-58 - Database [default] connected at jdbc:mysql://cxbase.ddns.net:3306/eatalotdb?verifyServerCertificate=false&useSSL=true
2017-10-12 08:17:01,650 [WARN] from org.hibernate.validator.messageinterpolation.ParameterMessageInterpolator in scala-execution-context-global-58 - HV000184: ParameterMessageInterpolator has been chosen, EL interpolation will not be supported
2017-10-12 08:17:02,283 [INFO] from play.api.Play in scala-execution-context-global-58 - Application started (Dev)
2017-10-12 08:17:06,779 [WARN] from play in play-dev-mode-akka.actor.default-dispatcher-10 - You are using status code '200' with flashing, which should only be used with a redirect status!
2017-10-12 08:19:16,040 [WARN] from com.zaxxer.hikari.pool.PoolBase in application-akka.actor.default-dispatcher-5 - HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@5de1137a (No operations allowed after connection closed.)
2017-10-12 08:19:16,076 [ERROR] from application in application-akka.actor.default-dispatcher-5 - 

! @75inf2bbf - Internal server error, for (POST) [/User/Login] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[PersistenceException: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 31549ms.]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:255)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:182)
	at play.core.server.AkkaHttpServer$$anonfun$$nestedInanonfun$executeHandler$1$1.applyOrElse(AkkaHttpServer.scala:252)
	at play.core.server.AkkaHttpServer$$anonfun$$nestedInanonfun$executeHandler$1$1.applyOrElse(AkkaHttpServer.scala:251)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:412)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.api.libs.streams.Execution$trampoline$.executeScheduled(Execution.scala:109)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:71)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.link(Promise.scala:337)
	at scala.concurrent.impl.Promise$DefaultPromise.linkRootOf(Promise.scala:322)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:39)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:38)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:43)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: javax.persistence.PersistenceException: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 31549ms.
	at io.ebeaninternal.server.transaction.TransactionFactoryBasic.create(TransactionFactoryBasic.java:45)
	at io.ebeaninternal.server.transaction.TransactionFactoryBasic.createTransaction(TransactionFactoryBasic.java:30)
	at io.ebeaninternal.server.transaction.TransactionManager.createTransaction(TransactionManager.java:246)
	at io.ebeaninternal.server.core.DefaultServer.createServerTransaction(DefaultServer.java:2142)
	at io.ebeaninternal.server.core.BeanRequest.createImplicitTransIfRequired(BeanRequest.java:50)
	at io.ebeaninternal.server.core.PersistRequestBean.initTransIfRequiredWithBatchCascade(PersistRequestBean.java:217)
	at io.ebeaninternal.server.persist.DefaultPersister.update(DefaultPersister.java:364)
	at io.ebeaninternal.server.persist.DefaultPersister.save(DefaultPersister.java:391)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1569)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1561)
	at io.ebean.Model.save(Model.java:190)
	at models.User.Admin.Admin.setToken(Admin.java:38)
	at utility.Utility.loginAdmin(Utility.java:77)
	at controllers.User.UserController.doLogin(UserController.java:168)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$12(Routes.scala:1126)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:136)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:135)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:110)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:78)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at annotations.CheckCSRF.call(CheckCSRF.java:20)
	at play.core.j.JavaAction.$anonfun$apply$2(JavaAction.scala:113)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:653)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:287)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:287)
	at scala.concurrent.Future.map$(Future.scala:287)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:653)
	at play.core.j.JavaAction.apply(JavaAction.scala:113)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:302)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	... 12 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 31549ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:601)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:194)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:144)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:85)
	at org.jdbcdslog.DataSourceProxyBase.getConnection(DataSourceProxyBase.java:45)
	at play.db.ebean.DefaultEbeanConfig$EbeanConfigParser$WrappingDatasource.getConnection(DefaultEbeanConfig.java:154)
	at io.ebeaninternal.server.transaction.TransactionFactoryBasic.create(TransactionFactoryBasic.java:37)
	... 58 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1187)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1182)
	at com.mysql.jdbc.ConnectionImpl.setNetworkTimeout(ConnectionImpl.java:5506)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:530)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:170)
	... 63 common frames omitted
2017-10-12 08:19:49,903 [WARN] from com.zaxxer.hikari.pool.PoolBase in application-akka.actor.default-dispatcher-4 - HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@714fb997 (No operations allowed after connection closed.)
2017-10-12 08:19:54,909 [WARN] from com.zaxxer.hikari.pool.PoolBase in application-akka.actor.default-dispatcher-4 - HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@107b4787 (No operations allowed after connection closed.)
2017-10-12 08:19:59,922 [WARN] from com.zaxxer.hikari.pool.PoolBase in application-akka.actor.default-dispatcher-4 - HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@28f310a5 (No operations allowed after connection closed.)
2017-10-12 08:20:04,928 [WARN] from com.zaxxer.hikari.pool.PoolBase in application-akka.actor.default-dispatcher-4 - HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@1791db28 (No operations allowed after connection closed.)
2017-10-12 08:20:09,933 [WARN] from com.zaxxer.hikari.pool.PoolBase in application-akka.actor.default-dispatcher-4 - HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@67deb2ee (No operations allowed after connection closed.)
2017-10-12 08:20:14,939 [WARN] from com.zaxxer.hikari.pool.PoolBase in application-akka.actor.default-dispatcher-4 - HikariPool-1 - Failed to validate connection com.mysql.jdbc.JDBC4Connection@446a5982 (No operations allowed after connection closed.)
2017-10-12 08:20:14,942 [ERROR] from application in application-akka.actor.default-dispatcher-4 - 

! @75inf5kea - Internal server error, for (POST) [/User/Login] ->
 
play.api.http.HttpErrorHandlerExceptions$$anon$1: Execution exception[[PersistenceException: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30041ms.]]
	at play.api.http.HttpErrorHandlerExceptions$.throwableToUsefulException(HttpErrorHandler.scala:255)
	at play.api.http.DefaultHttpErrorHandler.onServerError(HttpErrorHandler.scala:182)
	at play.core.server.AkkaHttpServer$$anonfun$$nestedInanonfun$executeHandler$1$1.applyOrElse(AkkaHttpServer.scala:252)
	at play.core.server.AkkaHttpServer$$anonfun$$nestedInanonfun$executeHandler$1$1.applyOrElse(AkkaHttpServer.scala:251)
	at scala.concurrent.Future.$anonfun$recoverWith$1(Future.scala:412)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.api.libs.streams.Execution$trampoline$.executeScheduled(Execution.scala:109)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:71)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.$anonfun$tryComplete$1$adapted(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.tryComplete(Promise.scala:284)
	at scala.concurrent.impl.Promise$DefaultPromise.link(Promise.scala:337)
	at scala.concurrent.impl.Promise$DefaultPromise.linkRootOf(Promise.scala:322)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:39)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at akka.dispatch.BatchingExecutor$AbstractBatch.processBatch(BatchingExecutor.scala:55)
	at akka.dispatch.BatchingExecutor$BlockableBatch.$anonfun$run$1(BatchingExecutor.scala:91)
	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:12)
	at scala.concurrent.BlockContext$.withBlockContext(BlockContext.scala:81)
	at akka.dispatch.BatchingExecutor$BlockableBatch.run(BatchingExecutor.scala:91)
	at akka.dispatch.TaskInvocation.run(AbstractDispatcher.scala:38)
	at akka.dispatch.ForkJoinExecutorConfigurator$AkkaForkJoinTask.exec(ForkJoinExecutorConfigurator.scala:43)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
Caused by: javax.persistence.PersistenceException: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30041ms.
	at io.ebeaninternal.server.transaction.TransactionFactoryBasic.create(TransactionFactoryBasic.java:45)
	at io.ebeaninternal.server.transaction.TransactionFactoryBasic.createTransaction(TransactionFactoryBasic.java:30)
	at io.ebeaninternal.server.transaction.TransactionManager.createTransaction(TransactionManager.java:246)
	at io.ebeaninternal.server.core.DefaultServer.createServerTransaction(DefaultServer.java:2142)
	at io.ebeaninternal.server.core.BeanRequest.createImplicitTransIfRequired(BeanRequest.java:50)
	at io.ebeaninternal.server.core.PersistRequestBean.initTransIfRequiredWithBatchCascade(PersistRequestBean.java:217)
	at io.ebeaninternal.server.persist.DefaultPersister.update(DefaultPersister.java:364)
	at io.ebeaninternal.server.persist.DefaultPersister.save(DefaultPersister.java:391)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1569)
	at io.ebeaninternal.server.core.DefaultServer.save(DefaultServer.java:1561)
	at io.ebean.Model.save(Model.java:190)
	at models.User.Admin.Admin.setToken(Admin.java:38)
	at utility.Utility.loginAdmin(Utility.java:77)
	at controllers.User.UserController.doLogin(UserController.java:168)
	at router.Routes$$anonfun$routes$1.$anonfun$applyOrElse$12(Routes.scala:1126)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:136)
	at play.core.routing.HandlerInvokerFactory$$anon$3.resultCall(HandlerInvoker.scala:135)
	at play.core.routing.HandlerInvokerFactory$JavaActionInvokerFactory$$anon$8$$anon$2$$anon$1.invocation(HandlerInvoker.scala:110)
	at play.core.j.JavaAction$$anon$1.call(JavaAction.scala:78)
	at play.http.DefaultActionCreator$1.call(DefaultActionCreator.java:31)
	at annotations.CheckCSRF.call(CheckCSRF.java:20)
	at play.core.j.JavaAction.$anonfun$apply$2(JavaAction.scala:113)
	at scala.concurrent.Future$.$anonfun$apply$1(Future.scala:653)
	at scala.util.Success.$anonfun$map$1(Try.scala:251)
	at scala.util.Success.map(Try.scala:209)
	at scala.concurrent.Future.$anonfun$map$1(Future.scala:287)
	at scala.concurrent.impl.Promise.liftedTree1$1(Promise.scala:29)
	at scala.concurrent.impl.Promise.$anonfun$transform$1(Promise.scala:29)
	at scala.concurrent.impl.CallbackRunnable.run(Promise.scala:60)
	at play.core.j.HttpExecutionContext$$anon$2.run(HttpExecutionContext.scala:56)
	at play.api.libs.streams.Execution$trampoline$.execute(Execution.scala:70)
	at play.core.j.HttpExecutionContext.execute(HttpExecutionContext.scala:48)
	at scala.concurrent.impl.CallbackRunnable.executeWithValue(Promise.scala:68)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete(Promise.scala:368)
	at scala.concurrent.impl.Promise$KeptPromise$Kept.onComplete$(Promise.scala:367)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.onComplete(Promise.scala:375)
	at scala.concurrent.impl.Promise.transform(Promise.scala:29)
	at scala.concurrent.impl.Promise.transform$(Promise.scala:27)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.transform(Promise.scala:375)
	at scala.concurrent.Future.map(Future.scala:287)
	at scala.concurrent.Future.map$(Future.scala:287)
	at scala.concurrent.impl.Promise$KeptPromise$Successful.map(Promise.scala:375)
	at scala.concurrent.Future$.apply(Future.scala:653)
	at play.core.j.JavaAction.apply(JavaAction.scala:113)
	at play.api.mvc.Action.$anonfun$apply$2(Action.scala:96)
	at scala.concurrent.Future.$anonfun$flatMap$1(Future.scala:302)
	at scala.concurrent.impl.Promise.$anonfun$transformWith$1(Promise.scala:37)
	... 12 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: HikariPool-1 - Connection is not available, request timed out after 30041ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:601)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:194)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:144)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:85)
	at org.jdbcdslog.DataSourceProxyBase.getConnection(DataSourceProxyBase.java:45)
	at play.db.ebean.DefaultEbeanConfig$EbeanConfigParser$WrappingDatasource.getConnection(DefaultEbeanConfig.java:154)
	at io.ebeaninternal.server.transaction.TransactionFactoryBasic.create(TransactionFactoryBasic.java:37)
	... 58 common frames omitted
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:918)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:897)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:886)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:860)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1187)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1182)
	at com.mysql.jdbc.ConnectionImpl.setNetworkTimeout(ConnectionImpl.java:5506)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:530)
	at com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:169)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:170)
	... 63 common frames omitted
2017-10-12 08:23:06,270 [WARN] from play in play-dev-mode-akka.actor.default-dispatcher-23 - You are using status code '200' with flashing, which should only be used with a redirect status!
