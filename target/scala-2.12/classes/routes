# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET     /                      controllers.Application.HomeController.index()


##disable this an you will recieve customerHome 403 forbidden error, the CRSF filter is used for cross site scripting prevention, use for authentication - used in POST requests
#+ nocsrf

##############################################################################

#User Controller
GET        /User/Login                         controllers.User.UserController.login()
GET        /User/Logout                        controllers.User.UserController.logout()

POST       /User/Login                         controllers.User.UserController.doLogin()

##############################################################################

##############################################################################

#Staff Controller
GET        /Staff                              controllers.User.StaffController.index()
GET        /Staff/Login                        controllers.User.StaffController.login()
GET        /Staff/Logout                       controllers.User.StaffController.logout()

POST       /Staff/Login                        controllers.User.StaffController.doLogin()

##############################################################################

##############################################################################

#Customer Controller
GET        /User                                controllers.User.CustomerController.index()
GET        /User/Register                       controllers.User.CustomerController.register()
GET        /User/Verify/:token                  controllers.User.CustomerController.verifyCustomer(token: String)
GET        /User/Profile                        controllers.User.CustomerController.edit()

POST       /User/Register                       controllers.User.CustomerController.create()
POST       /User/Registration/Reverify          controllers.User.CustomerController.reverify()
POST       /User/Registration/Completing        controllers.User.CustomerController.completeRegistration()
POST       /User/Profile                        controllers.User.CustomerController.update()
#GET        /User                 controllers.User.CustomerController.index()

##############################################################################

#Menu Controller

GET         /Menu                               controllers.Order.MenuController.index()

##############################################################################

##############################################################################

# Kitchen Controller

GET         /Kitchen/User                       controllers.Order.KitchenController.index()

##############################################################################

##############################################################################

# Delivery Controller

GET         /Delivery/User                       controllers.Delivery.DeliveryController.index()

##############################################################################

##############################################################################

# Finance Controller

GET         /User/AddFunds                       controllers.Finance.UserFinance.addFunds()
POST        /User/AddFunds                       controllers.Finance.UserFinance.doAddFunds()

##############################################################################

##############################################################################

# An example controller showing how to write asynchronous code
GET     /message                controllers.AsyncController.message

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file           controllers.Assets.versioned(path="/public", file: Asset)


GET     /menu                   controllers.Order.OrderController.getMenu()

GET     /menu/:menutype         controllers.Order.OrderController.switchMenu(menutype: Integer)

GET     /signup                 controllers.Order.AccountController.getSignUp

POST    /addmealtoorder         controllers.Order.OrderController.addMealToOrder(mealId: String)

GET     /addmeal                controllers.Order.OrderController.getAddMealToMenu

POST    /postmeal               controllers.Order.OrderController.addMeal

GET     /dologin                controllers.Order.AccountController.doLogin()

GET     /dosignout              controllers.Order.AccountController.doSignOut()

GET     /cart                   controllers.Order.OrderController.getCart()

POST    /cart/removemeal        controllers.Order.OrderController.removeMealFromOrder(mealId: String)

GET     /cart/submit            controllers.Order.OrderController.getSubmitPage()

POST    /cart/submitcart        controllers.Order.OrderController.submitCart()

GET     /history                controllers.Order.OrderController.getHistoryPage()

POST    /history/order          controllers.Order.OrderController.getViewOrder(orderId: String)

# ===== Kitchen routes =====

GET     /kitchen                            controllers.Order.KitchenController.home()

# Maintain Ingredients

GET     /kitchen/ingredients                controllers.Order.KitchenController.getIngredientPage()

POST    /kitchen/ingredients/order          controllers.Order.KitchenController.getIngredientOrderPage(id: String)

POST    /kitchen/ingredient/order/op        controllers.Order.KitchenController.editIngredient(id: String)

GET     /kitchen/ingredient/ordernew        controllers.Order.KitchenController.getNewIngredientPage()

POST    /kitchen/ingredient/add           controllers.Order.KitchenController.addIngredient()

# Maintain Order

GET     /kitchen/customerorders           controllers.Order.KitchenController.getOrderPage()

GET     /kitchen/pendingorders            controllers.Order.KitchenController.getPendingOrderPage()

GET     /kitchen/processingorders         controllers.Order.KitchenController.getProcessingOrderPage()

POST    /kitchen/customerorders/mealorder controllers.Order.KitchenController.getMealOrderPage(orderId: String)

POST    /kitchen/customerorders/mealorder/update    controllers.Order.KitchenController.updateOrderStatus(orderId: String)


GET     /*path                            controllers.Application.HomeController.invalidRoute(path: String)


## Javascript routes
#GET     /javascriptRoutes        controllers.JavascriptRoutesController