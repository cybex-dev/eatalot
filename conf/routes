# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# An example controller showing a sample home page
GET         /                                       controllers.Application.HomeController.index()
GET         /ContactUs                              controllers.Application.HomeController.contactUs()
GET         /Forbidden                              controllers.Application.HomeController.forbiddenAccess()
GET         /Unknown                                controllers.Application.HomeController.unknown()


##disable this an you will recieve customerHome 403 forbidden error, the CRSF filter is used for cross site scripting prevention, use for authentication - used in POST requests
#+ nocsrf

##############################################################################

# User Controller
GET         /User/Login                             controllers.User.UserController.login()
GET         /User/Logout                            controllers.User.UserController.logout()

POST        /User/Login                             controllers.User.UserController.doLogin()

##############################################################################

##############################################################################

#Staff Controller
GET         /Staff                                  controllers.User.DeliveryStaffController.index()

##############################################################################

##############################################################################

# Customer Controller
GET         /User                                   controllers.User.CustomerController.redirectHome()
GET         /User/Dashboard                         controllers.User.CustomerController.index()
+nocsrf
GET         /User/Dashboard/Update                  controllers.User.CustomerController.getCustomerDashUpdate()
GET         /User/Register                          controllers.User.CustomerController.register()
GET         /User/Register/Completing               controllers.User.CustomerController.completeRegistration()
GET         /User/Verify/:token                     controllers.User.CustomerController.verifyCustomer(token: String)
GET         /User/Profile                           controllers.User.CustomerController.edit()
GET         /User/History/Orders                    controllers.User.CustomerController.orderHistory()
GET         /User/History/Purchases                 controllers.User.CustomerController.paymentHistory()
GET         /User/History/Order/:orderId            controllers.User.CustomerController.viewOrder(orderId: String)
GET         /User/History/Payment/:paymentId        controllers.User.CustomerController.viewPayment(paymentId: String)

POST        /User/Register                          controllers.User.CustomerController.create()
POST        /User/Register/Reverify                 controllers.User.CustomerController.reverify()
POST        /User/Register/Completing               controllers.User.CustomerController.doCompleteRegistration()
POST        /User/Profile                           controllers.User.CustomerController.update()
POST        /User/ActiveOrders                      controllers.User.CustomerController.activeOrders()
#GET        /User                 controllers.User.CustomerController.remove()

# Customer Schedule
GET         /User/Schedule                          controllers.Order.ScheduleController.index()
GET         /User/Schedule/New                      controllers.Order.ScheduleController.createSchedule()
GET         /User/Schedule/AddOrder                 controllers.Order.ScheduleController.addOrder()
GET         /User/Schedule/Edit                     controllers.Order.ScheduleController.editScheduleName()

+nocsrf
POST        /User/Schedule/Delete/:orderId          controllers.Order.ScheduleController.removeOrder(orderId: String)
+nocsrf
POST        /User/Schedule/ChangeState              controllers.Order.ScheduleController.setScheduleState()
POST        /User/Schedule/Edit                     controllers.Order.ScheduleController.updateScheduleName()
POST        /User/Schedule/New                      controllers.Order.ScheduleController.doCreateSchedule()
POST        /User/Schedule/AddOrder                 controllers.Order.ScheduleController.doAddOrder()
POST        /User/Schedule/Clear                    controllers.Order.ScheduleController.clearSchedule()

##############################################################################

# Menu Controller

GET         /Menu                                   controllers.Order.MenuController.index()

##############################################################################

##############################################################################

# KitchenStaff Controller

GET         /Kitchen/Dashboard                      controllers.User.KitchenStaffController.index()
+nocsrf
GET         /Kitchen/Dashboard/Update               controllers.User.KitchenStaffController.getKitchenDashUpdate()
GET         /Kitchen/Order                          controllers.User.KitchenStaffController.viewOrder()
GET         /Kitchen/Orders/Active                  controllers.User.KitchenStaffController.viewActiveOrders()
GET         /Kitchen/Orders/Completed               controllers.User.KitchenStaffController.viewCompletedOrders()
GET         /Kitchen/Orders/Queued                  controllers.User.KitchenStaffController.viewQueuedOrders()
GET         /Kitchen/User/Edit                      controllers.User.KitchenStaffController.edit()

POST        /Kitchen/User/Edit                      controllers.User.KitchenStaffController.doEdit()

##############################################################################

##############################################################################

# DeliveryStaff Controller

GET         /Delivery/Dashboard                     controllers.User.DeliveryStaffController.index()
+nocsrf
GET         /Delivery/Dashboard/Update              controllers.User.DeliveryStaffController.getDeliveryDashUpdate()
GET         /Delivery/Order                         controllers.User.DeliveryStaffController.viewOrder()
GET         /Delivery/Order/Deliver                 controllers.User.DeliveryStaffController.deliverOrder()
GET         /Delivery/Order/Checkout                controllers.User.DeliveryStaffController.checkoutOrder()
GET         /Delivery/Orders/Completed              controllers.User.DeliveryStaffController.viewCompletedDeliveries()
GET         /Delivery/Orders/Active                 controllers.User.DeliveryStaffController.viewActiveDeliveries()
GET         /Delivery/Orders/Waiting                controllers.User.DeliveryStaffController.viewWaitingDeliveries()
GET         /Delivery/User/Edit                     controllers.User.DeliveryStaffController.edit()

POST        /Delivery/User/Edit                     controllers.User.DeliveryStaffController.doEdit()


##############################################################################

##############################################################################

# Admin Controller

GET         /Admin/Dashboard                            controllers.User.AdminController.index()
+nocsrf
GET         /Admin/Dashboard/Update                     controllers.User.AdminController.getAdminDashUpdate()
GET         /Admin/Manage/Meals                         controllers.User.AdminController.manageMeals()
GET         /Admin/Manage/Meals/Add                     controllers.User.AdminController.addMeal()
GET         /Admin/Manage/Meals/Edit/:mealId            controllers.User.AdminController.editMeal(mealId: String)
GET         /Admin/Manage/Users                         controllers.User.AdminController.manageUsers()
GET         /Admin/Manage/Users/Customer/New            controllers.User.AdminController.addCustomer()
GET         /Admin/Manage/Users/Staff/New               controllers.User.AdminController.addStaff()
GET         /Admin/Manage/Users/Customer/Edit:userId    controllers.User.AdminController.editCustomer(userId: String)
GET         /Admin/Manage/Users/Staff/Edit:userId       controllers.User.AdminController.editStaff(userId: String)
GET         /Admin/Manage/Discounts                     controllers.User.AdminController.manageDiscounts()
GET         /Admin/Manage/Discounts/Add/                controllers.Finance.UserFinanceController.addDiscount()
GET         /Admin/Manage/Discounts/Edit/:discountId    controllers.Finance.UserFinanceController.editDiscount(discountId: String)
GET         /Admin/Edit                                 controllers.User.AdminController.edit()

POST        /Admin/Edit                                 controllers.User.AdminController.doEdit()
POST        /Admin/Manage/Discounts/Edit                controllers.Finance.UserFinanceController.updateDiscount()
POST        /Admin/Manage/Meals/Edit                    controllers.User.AdminController.updateMeal()
POST        /Admin/Manage/Users/Customer/Edit           controllers.User.AdminController.updateCustomer()
POST        /Admin/Manage/Users/Staff/Edit              controllers.User.AdminController.updateStaff()
POST        /Admin/Manage/Discounts/Edit                controllers.Finance.UserFinanceController.updateDiscount()
+nocsrf
POST        /Admin/Manage/Meals/Remove                  controllers.User.AdminController.removeMeal()
+nocsrf
POST        /Admin/Manage/Users/Customer/Remove         controllers.User.AdminController.removeCustomer()
+nocsrf
POST        /Admin/Manage/Users/Staff/Remove            controllers.User.AdminController.removeStaff()
+nocsrf
POST        /Admin/Manage/Discounts/Remove/:discountId  controllers.Finance.UserFinanceController.removeDiscount(discountId: String)

##############################################################################

##############################################################################

# Finance Controller

GET         /User/AddFunds                          controllers.Finance.UserFinanceController.addFunds()

POST        /User/AddFunds                          controllers.Finance.UserFinanceController.doAddFunds()

##############################################################################

##############################################################################

# Order - Management Package

# Map static resources from the /public folder to the /assets URL path

GET     /menu                   controllers.Order.OrderController.getMenu()

GET     /menu/:menutype         controllers.Order.OrderController.switchMenu(menutype: Integer)

GET     /signup                 controllers.Order.AccountController.getSignUp

POST    /addmealtoorder         controllers.Order.OrderController.addMealToOrder(mealId: String)

GET     /addmeal                controllers.Order.OrderController.getAddMealToMenu

POST    /postmeal               controllers.Order.OrderController.addMeal

GET     /dologin                controllers.Order.AccountController.doLogin()

GET     /dosignout              controllers.Order.AccountController.doSignOut()

GET     /cart                   controllers.Order.OrderController.getCart()

POST    /cart/removemeal        controllers.Order.OrderController.removeMealFromOrder(mealId: String)

GET     /cart/submit            controllers.Order.OrderController.getSubmitPage()

POST    /cart/submitcart        controllers.Order.OrderController.submitCart()

GET     /history                controllers.Order.OrderController.getHistoryPage()

POST    /history/order          controllers.Order.OrderController.getViewOrder(orderId: String)

# ===== Kitchen routes =====

GET     /kitchen                            controllers.Order.KitchenController.home()

# Maintain Ingredients

GET     /kitchen/ingredients                controllers.Order.KitchenController.getIngredientPage()

POST    /kitchen/ingredients/order          controllers.Order.KitchenController.getIngredientOrderPage(id: String)

POST    /kitchen/ingredient/order/op        controllers.Order.KitchenController.editIngredient(id: String)

GET     /kitchen/ingredient/ordernew        controllers.Order.KitchenController.getNewIngredientPage()

POST    /kitchen/ingredient/add           controllers.Order.KitchenController.addIngredient()

# Maintain Order

GET     /kitchen/customerorders           controllers.Order.KitchenController.getOrderPage()

GET     /kitchen/pendingorders            controllers.Order.KitchenController.getPendingOrderPage()

GET     /kitchen/processingorders         controllers.Order.KitchenController.getProcessingOrderPage()

POST    /kitchen/customerorders/mealorder controllers.Order.KitchenController.getMealOrderPage(orderId: String)

POST    /kitchen/customerorders/mealorder/update    controllers.Order.KitchenController.updateOrderStatus(orderId: String)

##############################################################################

# Javascript Routing

#GET        /assets/javascripts/routes               controllers.Order.ScheduleController.javascriptRoutes()
+nocsrf
GET         /assets/javascripts/scheduleJSRoutes    controllers.Order.ScheduleController.scheduleJSRoutes()
+nocsrf
GET         /assets/javascripts/customerJSRoutes    controllers.User.CustomerController.customerJSRoutes()
+nocsrf
GET         /assets/javascripts/adminJSRoutes       controllers.User.AdminController.adminJSRoutes()
+nocsrf
GET         /assets/javascripts/deliveryJSRoutes    controllers.User.DeliveryStaffController.deliveryJSRoutes()
+nocsrf
GET         /assets/javascripts/kitchenJSRoutes     controllers.User.KitchenStaffController.kitchenJSRoutes()
+nocsrf
GET         /assets/javascripts/financeJSRoutes     controllers.Finance.UserFinanceController.financeJSRoutes()

##############################################################################

##############################################################################

# Asset Routes

# Map static resources from the /public folder to the /assets URL path
GET         /assets/*file                           controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/User/*file                      controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/User/Registration/*file         controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/Delivery/*file                  controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/Kitchen/*file                   controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/Staff/*file                     controllers.Assets.versioned(path="/public", file: Asset)
GET         /assets/History/*file                   controllers.Assets.versioned(path="/public", file: Asset)

#GET         /assets/fonts/*file                     controllers.Assets.versioned(path="/public/fonts",file: Asset)

##############################################################################

##############################################################################

# Default path if not found
GET         /*path                                  controllers.Application.HomeController.invalidRoute(path: String)

##############################################################################